Python 提供了多个模块来支持多线程编程，包括 thread、 threading 和 Queue 模块等。程序是可以使用 thread 和 threading 模块来创建与管理线程。 thread 模块提供了基本的线程和锁定支持；而 threading 模块提供了更高级别、功能更全面的线程管理。使用 Queue 模块，用户可以创建一个队列数据结构，用于在多线程之间进行共享。（推荐使用threading模块比thread模块更高级）

 

Threading模块的对象
对象

描述

Thread

线程对象

Lock

互斥锁

Condition

条件变量

Event

事件，该事件发生后所有等待该事件的线程将激活

Semaphore

信号量（计数器）

Timer

定时器，运行前会等待一段时间

Barrier

创建一个障碍，必须达到指定数量线程才开始运行

 

Threading模块的Thread类
对象

描述

name

线程名（属性）

ident

线程标识符（属性）

daemon

线程是否是守护线程（属性）

_init_(group=None, tatget=None, name=None, args=(),kwargs ={}, verbose=None, daemon=None)

实例化一个线程对象，需要有一个可调用的 target，以及其参数 args或 kwargs。还可以传递 name 或 group 参数，不过后者还未实现。此外， verbose 标 志 也 是 可 接 受 的。 而 daemon 的 值 将 会 设定thread.daemon 属性/标志

start()

开启线程

run()

定义线程功能的方法（通常在子类中被应用开发者重写）

Barrier

创建一个障碍，必须达到指定数量线程才开始运行


原文链接：https://blog.csdn.net/wqx521/article/details/82754617